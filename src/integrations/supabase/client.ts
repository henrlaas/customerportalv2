
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vjqbgnjeuvuxvuruewyc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZqcWJnbmpldXZ1eHZ1cnVld3ljIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM5NTA5MDIsImV4cCI6MjA1OTUyNjkwMn0.MvXDNmHq771t4TbZrrnaylqBoTcEONv0qv31sZYmAA8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

const SITE_URL = typeof window !== 'undefined' ? window.location.origin : '';

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
  },
  global: {
    headers: {
      'X-Client-Info': 'app-build-magic-wand',
    },
  },
});

// Helper function to add created_by for any table that needs it
export const insertWithUser = async <T extends keyof Database["public"]["Tables"]>(
  table: T,
  data: Database["public"]["Tables"][T]["Insert"]
) => {
  const { data: sessionData } = await supabase.auth.getSession();
  const userId = sessionData.session?.user?.id;
  
  if (!userId) {
    throw new Error("User not authenticated");
  }
  
  return supabase
    .from(table)
    .insert({
      ...data,
      created_by: userId
    } as Database["public"]["Tables"][T]["Insert"]);
};

// Helper function to update with user check
export const updateWithUser = async <T extends keyof Database["public"]["Tables"]>(
  table: T,
  id: string,
  data: Database["public"]["Tables"][T]["Update"]
) => {
  const { data: sessionData } = await supabase.auth.getSession();
  const userId = sessionData.session?.user?.id;
  
  if (!userId) {
    throw new Error("User not authenticated");
  }
  
  return supabase
    .from(table)
    .update(data as Database["public"]["Tables"][T]["Update"])
    .eq('id', id as any);
};
